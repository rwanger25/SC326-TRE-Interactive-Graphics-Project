title = "Dendrogram of Different Cereals",
caption = "Source: 1993 ASA Statistical Graphics Exposition, from FDA Labels",
subtitle = "Text colors: Red - Shelf 1, Blue - Shelf 2, Green - Shelf 3")
library(ggplot2)
library(readr)
library(dplyr)
# Only use the June 2016 subset
bike <- read_csv("https://github.com/mateyneykov/315_code_data/raw/master/data/nyc-citi-bike-data-subset.csv")
#  Add start_date variable
bike <- mutate(bike,
start_date = as.Date(starttime, format = "%m/%d/%Y"))
dim(bike)
summary(bike)
trips_per_day <- bike %>%
group_by(start_date) %>%
summarize(n_trips = n())
ggplot(trips_per_day, aes(x = start_date, y = n_trips)) + geom_line() +
scale_x_date()
ggplot(trips_per_day, aes(x = start_date, y = n_trips)) + geom_line() +
scale_x_date() +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week")
ggplot(trips_per_day, aes(x = start_date, y = n_trips)) + geom_line() +
scale_x_date() +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week") +
theme(axis.text = element_text(angle = 90))
ggplot(trips_per_day, aes(x = start_date, y = n_trips)) + geom_line() +
scale_x_date() +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week") +
theme(axis.text.x = element_text(45))
ggplot(trips_per_day, aes(x = start_date, y = n_trips)) + geom_line() +
scale_x_date() +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45))
trips_per_day_usertype <- bike %>%
group_by(start_date, usertype) %>%
summarize(n_trips = n())
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date()
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time by User Type",
color = "User Type") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45))
library(ggseas)
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date() +
stat_rollapplyr()
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date() +
stat_rollapplyr(width = 7, align = "right", linewidth = 2)
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date() +
stat_rollapplyr(width = 7, align = "right", linewidth = 1)
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date() +
stat_rollapplyr(width = 7, align = "right", linewidth = 2)
ggplot(trips_per_day_usertype, aes(x = start_date, y = n_trips, color = usertype)) +
geom_line() + scale_x_date() +
stat_rollapplyr(width = 7, align = "right", linewidth = 2) +
labs(x = "Date",
y = "Number of trips",
title = "Number of Bike Trips Taken Over Time by User Type",
color = "User Type") +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45))
rand_ts <- rnorm(1000)
acf(rand_ts, plot = FALSE)
acf(rand_ts, plot = TRUE)
bike_customer_acf <- acf(filter(trips_per_day_usertype,
usertype == "Customer")$n_trips,
plot = FALSE)
bike_subsciber_acf <- acf(filter(trips_per_day_usertype,
usertype == "Subscriber")$n_trips,
plot = FALSE)
bike_customer_acf_df <- with(bike_customer_acf, data.frame(lag,acf))
ggplot(bike_customer_acf_df, aes(x = lag, y= acf)) + geom_col()
View(bike_customer_acf)
View(trips_per_day_usertype)
ggplot(bike_customer_acf_df, aes(x = lag, y= acf)) + geom_col() +
labs(x = "Lag (days)",
y = "Autocorrelation",
title = "Autocorrelation of the Number of Bike Trips per Day for Costomers") +
theme(axis.text.x = element_text(angle = 45))
ggplot(bike_customer_acf_df, aes(x = lag, y= acf)) + geom_col() +
labs(x = "Lag (days)",
y = "Autocorrelation",
title = "Autocorrelation of the Number of Bike Trips per Day for Subscribers")
---
title: "SC326 Homework 08a"
/* Using CSS code we can change the height of Shiny output objects */
/* Using CSS code we can change the height of Shiny output objects */
/* Using CSS code we can change the height of Shiny output objects */
library(ggplot2)
library(dplyr)
library(dendextend)
library(MASS)
data(UScereal)
# ?UScereal  # there are 3 categorical and 8 continuous variables
cereal_cont <- dplyr::select(UScereal, !c(mfr, shelf, vitamins))
cereal_cont_scale <- scale(cereal_cont)
dist_cereal <- dist(cereal_cont_scale)
dend <- dist_cereal %>% hclust %>% as.dendrogram
## Make sure the shelf-text color palette...
text_pal <- RColorBrewer::brewer.pal(n = 3, name = "Set1")
## ...is distinct from the cluster/branch color palette
branch_pal <- RColorBrewer::brewer.pal(n = 12, name = "Set3")
dend %>%
set("branches_k_col", branch_pal, k = 7) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = 4.25, linetype = 'dashed')
hist(faithful$waiting, probability = TRUE,
breaks = as.numeric(input$n_breaks),
xlab = "Waiting time (minutes)", ylab = "Density",
main = "Waiting time until geyser eruption")
shinyApp(
ui = fluidPage(
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(5, 10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
),
plotOutput("geyser_plot")
),
server = function(input, output) {
output$geyser_plot <- renderPlot({
hist(faithful$waiting, probability = TRUE,
breaks = as.numeric(input$n_breaks),
xlab = "Waiting time (minutes)", ylab = "Density",
main = "Waiting time until geyser eruption")
dens <- density(faithful$waiting, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
},
options = list(height = 550)
)
data(faithful)
library(shiny)
shinyApp(
ui = fluidPage(
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(5, 10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
),
plotOutput("geyser_plot")
),
server = function(input, output) {
output$geyser_plot <- renderPlot({
hist(faithful$waiting, probability = TRUE,
breaks = as.numeric(input$n_breaks),
xlab = "Waiting time (minutes)", ylab = "Density",
main = "Waiting time until geyser eruption")
dens <- density(faithful$waiting, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
},
options = list(height = 550)
)
shinyApp(
ui = fluidPage(
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(5, 10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
),
plotOutput("geyser_plot")
),
server = function(input, output) {
output$geyser_plot <- renderPlot({
hist(faithful$waiting, probability = TRUE,
breaks = as.numeric(input$n_breaks),
xlab = "Waiting time (minutes)", ylab = "Density",
main = "Waiting time until geyser eruption")
dens <- density(faithful$waiting, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
},
options = list(height = 550)
)
dend %>%
set("branches_k_col", branch_pal, k = 7) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = 4.25, linetype = 'dashed')
dend %>%
set("branches_k_col", branch_pal, k = 7) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = 4.25, linetype = 'dashed')
dend %>%
set("branches_k_col", branch_pal, k = 7) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = 4.25, linetype = 'dashed')
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 550)
)
shinyApp(
ui <- page_sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "height",
label = "Height to Cut Dendrogram:",
min = 0,
max = 10,
value = 4.2
),
# Output: Histogram ----
plotOutput(outputId = "dendrogram")
),
server <- function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$height) )) %>% #7
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$height, linetype = 'dashed')
})
}
)
library(ggplot2)
library(dplyr)
library(dendextend)
library(MASS)
data(UScereal)
# ?UScereal  # there are 3 categorical and 8 continuous variables
cereal_cont <- dplyr::select(UScereal, !c(mfr, shelf, vitamins))
cereal_cont_scale <- scale(cereal_cont)
dist_cereal <- dist(cereal_cont_scale)
dend <- dist_cereal %>% hclust %>% as.dendrogram
## Make sure the shelf-text color palette...
text_pal <- RColorBrewer::brewer.pal(n = 3, name = "Set1")
## ...is distinct from the cluster/branch color palette
branch_pal <- RColorBrewer::brewer.pal(n = 12, name = "Set3")
dend %>%
set("branches_k_col", branch_pal, k = 7) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = 4.25, linetype = 'dashed')
library(shiny)
library(bslib)
shinyApp(
ui <- page_sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "height",
label = "Height to Cut Dendrogram:",
min = 0,
max = 10,
value = 4.2
),
# Output: Histogram ----
plotOutput(outputId = "dendrogram")
),
server <- function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$height) )) %>% #7
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$height, linetype = 'dashed')
})
}
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 550)
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 700)
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 700)
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 1000)
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 550)
)
shinyApp(
ui = fluidPage(
inputPanel(
sliderInput("dend_cut", label = "Cut Height of Dendrogram",
min = 0, max = 10, value = 4.2, step = 0.1)
),
plotOutput("dendrogram")
),
server = function(input, output) {
output$dendrogram <- renderPlot({
dend %>%
set("branches_k_col", branch_pal, k = max( cutree(dend, h = input$dend_cut) )) %>%
set("labels_col", text_pal[UScereal$shelf], order_value = TRUE) %>%
set("labels_cex", .5) %>%
ggplot(horiz = TRUE, theme = NULL) +
labs(x = "Cereal name", y = "Distance",
title = "Hierarchical clustering of US cereals,\ncolored by shelf height",
subtitle = "Red = shelf 1; blue = shelf 2; green = shelf 3",
caption = "Source: UScereal dataset in R's MASS package") +
theme(axis.text.y = element_blank()) +
ylim(13, -3) +
geom_hline(yintercept = input$dend_cut, linetype = 'dashed')
})
},
options = list(height = 550)
)
setwd("~/Documents/GitHub/SC326-TRE-Interactive-Graphics-Project")
